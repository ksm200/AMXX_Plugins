/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <TaFcsgo2>
#include <TaFskinydd2>
#include <smsshop>

new g_iUsluga;


//UWAGA! UWAGA! UWAGA! UWAGA!
//Mozliwe, ze usluga nie zadziala na Twoim modzie, ze wzgledu na rozny dobor skinow
//Dlatego polecam uzywac tego z pewna doza zaufania :) 

#define NAZWA_DL "Dowolny skin" 				//Nazwa uslugi wyswietlana w menu
#define NAZWA_KR "skin" 						//nazwa uslugi uzywana w logach, jako okienko MOTD itd.
#define CENA_KR "7,38"						//krotka cena SMS (wstawiaj przecinek, nie kropke!)
#define CENA_DL "7,38 zl SMS / 5 zl przelew / 5 zl PSC"		//dluga cena ktora wyswietlana bedzie w menu

new g_iOstatnioWybranaBron[33];
new g_iOstatnioWybranySkin[33];

public plugin_init() 
{
	new szNazwa[64]; formatex(szNazwa, 63, "Sklep SMS: Usluga %s", NAZWA_DL);
	register_plugin(szNazwa, "1.0", "d0naciak");
	
	g_iUsluga = ss_register_service(NAZWA_DL, NAZWA_KR);
	ss_add_service_qu(g_iUsluga, "-", "0", CENA_DL, CENA_KR);
}	

public ss_buy_service_pre(id, iUsluga, iJednostkaIlosci)
{
	if(iUsluga != g_iUsluga)
		return SS_CONTINUE;
	
	WybierzBron(id);
	return SS_STOP;
}

public WybierzBron(id) {
	
	new iMenu = menu_create("Wybierz bron:", "WybierzBron_Handler");
	
	menu_additem(iMenu, "AWP");
	menu_additem(iMenu, "AK47");
	menu_additem(iMenu, "M4A1");
	menu_additem(iMenu, "GALIL");
	menu_additem(iMenu, "FAMAS");
	menu_additem(iMenu, "KOSA");
	menu_additem(iMenu, "GLOCK18");
	menu_additem(iMenu, "USP");
	menu_additem(iMenu, "DEAGLE");
	menu_setprop(iMenu, MPROP_EXIT, MEXIT_NEVER);
	menu_display(id, iMenu);
}

public WybierzBron_Handler(id, iMenu, iItem) {
	if(iItem < 0) {
		return PLUGIN_CONTINUE;
	}
	
	g_iOstatnioWybranaBron[id] = iItem+1;
	WybierzSkina(id);
	
	menu_destroy(iMenu);
	return PLUGIN_CONTINUE;
}

public WybierzSkina(id) {
	new iMenu = menu_create("Wybierz skina, ktorego chcesz dodac do oferty:", "WybierzSkina_Handler"),
	iBron = g_iOstatnioWybranaBron[id];
	
	switch(iBron) {
		case 1: {
			for(new i = 2; i < sizeof ModelAWP; i++) {
				menu_additem(iMenu, ModelAWP[i][1]);
			}
		}
		
		case 2: {
			for(new i = 2; i < sizeof ModelAK; i++) {
				menu_additem(iMenu, ModelAK[i][1]);
			}
		}
		
		case 3: {
			for(new i = 2; i < sizeof ModelM4; i++) {
				menu_additem(iMenu, ModelM4[i][1]);
			}
		}
		
		case 4: {
			for(new i = 2; i < sizeof ModelGAL; i++) {
				menu_additem(iMenu, ModelGAL[i][1]);
			}
		}
		
		case 5: {
			for(new i = 2; i < sizeof ModelFM; i++) {
				menu_additem(iMenu, ModelFM[i][1]);
			}
		}
		
		case 6: {
			for(new i = 2; i < sizeof ModelKOSA; i++) {
				menu_additem(iMenu, ModelKOSA[i][1]);
			}
		}
		
		case 7: {
			for(new i = 2; i < sizeof ModelGLOCK; i++) {
				menu_additem(iMenu, ModelGLOCK[i][1]);
			}
		}
		
		case 8: {
			for(new i = 2; i < sizeof ModelUSP; i++) {
				menu_additem(iMenu, ModelUSP[i][1]);
			}
		}
		
		case 9: {
			for(new i = 2; i < sizeof ModelDEAGLE; i++) {
				menu_additem(iMenu, ModelDEAGLE[i][1]);
			}
		}
	}
			
	
	menu_setprop(iMenu, MPROP_EXIT, MEXIT_NEVER);
	menu_display(id, iMenu);
	return PLUGIN_CONTINUE;
}

public WybierzSkina_Handler(id, iMenu, iItem) {
	if(iItem < 0) {
		return PLUGIN_CONTINUE;
	}
	
	g_iOstatnioWybranySkin[id] = iItem + 2;
	ss_go_to_choosing_pay_method(id);
		
	menu_destroy(iMenu);
	return PLUGIN_CONTINUE;
}

public ss_buy_service_post(id, iUsluga, iJednostkaIlosci)
{
	if(iUsluga != g_iUsluga)
		return SS_CONTINUE;
	
	new iBron = g_iOstatnioWybranaBron[id], iSkin = g_iOstatnioWybranySkin[id];
	ustaw_skin(id, (1<<iBron), iSkin, pobierz_skin(id, (1<<iBron), iSkin) + 1);
	
	ss_finalize_user_service(id);
	
	return SS_CONTINUE;
}